AWSTemplateFormatVersion: "2010-09-09"
Description: Creates the uspto search agent.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Search API keys
        Parameters:
          - USPTOApiKey
Parameters:
  AgentAliasName:
    Type: String
    Default: "Latest"
  BedrockModelId:
    Type: String
    Description: The ID of the Foundation Model to use for the Agent
    Default: us.anthropic.claude-3-5-sonnet-20241022-v2:0
  AgentIAMRoleArn:
    Type: String
    Description: (Optional) Amazon Bedrock Agents service role ARN
    Default: ""
  USPTOApiKey:
    Type: String
    NoEcho: true
    Description: Provide USPTO API Key to utilize /search path
    MinLength: 1

Conditions:
  HasUSPTOApiKeyCondition: !Not [!Equals [!Ref USPTOApiKey, ""]]
  CreateAgentAliasCondition: !Not [!Equals [!Ref AgentAliasName, ""]]
  AgentIAMRoleCondition: !Not [!Equals [!Ref AgentIAMRoleArn, ""]]

Resources:
  #####################
  ##### API Keys #####
  ###################

  USPTOApiKeySecret:
    Type: "AWS::SecretsManager::Secret"
    Condition: HasUSPTOApiKeyCondition
    Properties:
      Name: !Sub
        - "USPTO_API_KEY_${StackId}"
        - StackId: !Select [2, !Split ["/", !Ref AWS::StackId]]
      Description: "API Key for USPTO service"
      SecretString: !Ref USPTOApiKey

  ########################
  ##### USPTOSearch #####
  ######################

  USPTOSearchLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: SearchUSPTO
      Description: Search for USPTO patent information using { 'search_query' } parameter (e.g. 'Cancer treatment'). Accepts optional { 'days' } parameter, representing the number of days in the past to search (e.g. '100').
      Runtime: python3.13
      Handler: index.lambda_handler
      Role: !GetAtt USPTOSearchLambdaRole.Arn
      Timeout: 30
      MemorySize: 128
      Environment:
        Variables:
          ACTION_GROUP: "USPTOSearchActionGroup"
          USPTO_API_KEY_NAME: !Sub
            - "USPTO_API_KEY_${StackId}"
            - StackId: !Select [2, !Split ["/", !Ref AWS::StackId]]
      Code: "action-groups/uspto-search"
      Tags:
        - Key: Application
          Value: HCLSAgents

  USPTOSearchLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: GetSecretsManagerSecret
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource:
                  - !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:USPTO_API_KEY_*

  USPTOSearchLambdaAgentPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt USPTOSearchLambdaFunction.Arn
      Principal: bedrock.amazonaws.com
      SourceAccount: !Ref AWS::AccountId
      SourceArn: !Sub arn:aws:bedrock:${AWS::Region}:${AWS::AccountId}:agent-alias/*

  USPTOSearchLambdaAgentAliasPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt USPTOSearchLambdaFunction.Arn
      Principal: bedrock.amazonaws.com
      SourceAccount: !Ref AWS::AccountId
      SourceArn: !Sub arn:aws:bedrock:${AWS::Region}:${AWS::AccountId}:agent/*

  #####################
  ##### Agent #####
  ###################

  USPTOSearchAgent:
    Type: AWS::Bedrock::Agent
    Properties:
      ActionGroups:
        - ActionGroupName: "UserInputAction"
          ParentActionGroupSignature: "AMAZON.UserInput"
          ActionGroupState: "ENABLED"
        - ActionGroupName: USPTOSearch
          Description: Actions for answering questions with information from the internet
          ActionGroupExecutor:
            Lambda: !GetAtt USPTOSearchLambdaFunction.Arn
          ActionGroupState: ENABLED
          FunctionSchema:
            Functions:
              - Name: uspto_search
                Description: Search the USPTO Open Data system for a given query
                Parameters:
                  search_query:
                    Description: "The search query to execute with USPTO. Example: 'Nanobodies'"
                    Type: string
                    Required: True
                  days:
                    Description: "The number of days of history to search. Helps when looking for recent events or news."
                    Type: string
                    Required: False
      AgentName: "USPTO-Search-Agent"
      # If an IAM role ARN is passed as a paremter, use it. Otherwise look in SSM parameter store
      AgentResourceRoleArn:
        "Fn::If":
          - AgentIAMRoleCondition
          - !Ref AgentIAMRoleArn
          - "{{resolve:ssm:/bedrock/agent/role/arn:1}}"
      AutoPrepare: True
      Description: "Get Patent information from the US Patent and Trademark Office"
      FoundationModel: !Ref BedrockModelId
      GuardrailConfiguration:
        GuardrailIdentifier: !GetAtt USPTOSearchGuardrail.GuardrailId
        GuardrailVersion: !GetAtt USPTOSearchGuardrail.Version
      Instruction: |
        # Patent Search Assistant Instructions

        You are a specialized assistant leveraging Claude 3.5 Sonnet v2 to help users search the USPTO patent database. Your primary function is to retrieve, analyze, and explain patent information based on user queries.

        ## How to Help Users

        1. When users ask about patents, help them formulate effective search queries by:
          - Clarifying technical terminology
          - Identifying key search terms
          - Suggesting appropriate search parameters (date ranges, classifications, etc.)

        2. After retrieving patent information:
          - Always return the application number
          - Always return the applicant name
          - Always return the effective filing date
          - Summarize key details in plain language
          - Explain technical concepts found in patents
          - Highlight important claims and applications
          - Identify assignees and filing dates

        Always maintain a helpful, informative tone while translating complex patent language into clear explanations for users of all technical backgrounds.

  AgentAliasResource:
    Type: AWS::Bedrock::AgentAlias
    Condition: CreateAgentAliasCondition
    Properties:
      AgentId: !GetAtt USPTOSearchAgent.AgentId
      AgentAliasName: !Ref AgentAliasName

  USPTOSearchGuardrail:
    Type: AWS::Bedrock::Guardrail
    Properties:
      BlockedInputMessaging: "Sorry, your query violates our usage policies."
      BlockedOutputsMessaging: "Sorry, I am unable to reply because the output violates our usage policies."
      ContentPolicyConfig:
        FiltersConfig:
          - InputStrength: "HIGH"
            OutputStrength: "HIGH"
            Type: "MISCONDUCT"
          - InputStrength: "HIGH"
            OutputStrength: "NONE"
            Type: "PROMPT_ATTACK"
      Description: Turn on to block profane words and other harmful content.
      Name: USPTOSearchGuardrail
      WordPolicyConfig:
        ManagedWordListsConfig:
          - Type: PROFANITY

Outputs:
  AgentId:
    Description: Agent ID
    Value: !Ref USPTOSearchAgent
  AgentAliasId:
    Description: Agent Alias ID
    Value: !GetAtt AgentAliasResource.AgentAliasId
    Condition: CreateAgentAliasCondition
  AgentAliasArn:
    Description: Agent Alias ARN
    Value: !GetAtt AgentAliasResource.AgentAliasArn
    Condition: CreateAgentAliasCondition