AWSTemplateFormatVersion: "2010-09-09"
Description: Creates an Amazon Bedrock Agent for clinical trial protocol generation and optimization based on best practices and common data models.

Parameters:
  AgentAliasName:
    Type: String
    Default: "Latest"
  BedrockModelId:
    Type: String
    Description: The ID of the Foundation Model to use for the Agent
    Default: anthropic.claude-3-5-sonnet-20240620-v1:0
  AgentIAMRoleArn:
    Type: String
    Description: (Optional) Amazon Bedrock Agents service role ARN
    Default: ""

Conditions:
  CreateAgentAliasCondition: !Not [!Equals [!Ref AgentAliasName, ""]]
  AgentIAMRoleCondition: !Not [!Equals [!Ref AgentIAMRoleArn, ""]]

Resources:
  #######################
  ##### Lambda Roles #####
  #######################

  ClinicalDataModelLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  #######################
  ##### Lambda Functions #####
  #######################

  ClinicalDataModelLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: clinical-data-model
      Handler: index.lambda_handler
      Role: !GetAtt ClinicalDataModelLambdaRole.Arn
      Runtime: python3.12
      Timeout: 30
      MemorySize: 256
      Code: "action_groups/clinical_data_modal"
      PackageType: Zip
      Environment:
        Variables:
          ACTION_GROUP: "clinical-data-model-action-group"
          LOG_LEVEL: "DEBUG"

  #######################
  ##### Lambda Permissions #####
  #######################

  ClinicalDataModelLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt ClinicalDataModelLambda.Arn
      Principal: bedrock.amazonaws.com
      SourceAccount: !Ref AWS::AccountId
      SourceArn: !Sub arn:aws:bedrock:${AWS::Region}:${AWS::AccountId}:agent-alias/*

  ###################
  ##### Guardrail #####
  ###################

  Guardrail:
    Type: AWS::Bedrock::Guardrail
    Properties:
      BlockedInputMessaging: "Sorry, your query violates our usage policies."
      BlockedOutputsMessaging: "Sorry, I am unable to reply because the output violates our usage policies."
      ContentPolicyConfig:
        FiltersConfig:
          - InputStrength: "HIGH"
            OutputStrength: "HIGH"
            Type: "MISCONDUCT"
          - InputStrength: "HIGH"
            OutputStrength: "NONE"
            Type: "PROMPT_ATTACK"
      Description: Guardrail to block profane words and other harmful content.
      Name: ClinicalTrialProtocolGeneratorGuardrail
      WordPolicyConfig:
        ManagedWordListsConfig:
          - Type: PROFANITY

  ###################
  ##### Agent #####
  ###################

  Agent:
    Type: AWS::Bedrock::Agent
    Properties:
      ActionGroups:
        - ActionGroupName: "UserInputAction"
          ParentActionGroupSignature: "AMAZON.UserInput"
          ActionGroupState: "ENABLED"
        - ActionGroupName: clinical-data-model-action-group
          Description: Access clinical trial protocol templates based on common data models
          ActionGroupExecutor:
            Lambda: !GetAtt ClinicalDataModelLambda.Arn
          ActionGroupState: ENABLED
          FunctionSchema:
            Functions:
              - Name: getClinicalProtocolTemplate
                Description: >
                  Retrieves clinical trial protocol templates based on the common data model (CDM).
                Parameters: {}
      AgentName: clinical-trial-protocol-generator-agent
      # If an IAM role ARN is passed as a paremter, use it. Otherwise look in SSM parameter store
      AgentResourceRoleArn:
        "Fn::If":
          - AgentIAMRoleCondition
          - !Ref AgentIAMRoleArn
          - "{{resolve:ssm:/bedrock/agent/role/arn:1}}"
      AutoPrepare: True
      Description: "Agent that helps users create, review, and optimize clinical trial protocols based on best practices and common data models"
      FoundationModel: !Ref BedrockModelId
      GuardrailConfiguration:
        GuardrailIdentifier: !GetAtt Guardrail.GuardrailId
        GuardrailVersion: !GetAtt Guardrail.Version
      Instruction: |
        You are a Clinical Trial Protocol Generator Agent that helps users create, review, and optimize clinical trial protocols based on best practices, common data models (CDM), regulatory guidelines, and similar studies. 
        You assist with protocol design, inclusion/exclusion criteria development, endpoint selection, and statistical considerations.

        You accept both structured inputs (e.g., study phase, condition, intervention) and natural language queries (e.g., "Create a Phase 2 protocol for testing a new GLP-1 agonist in type 2 diabetes") 
        and convert them into appropriate protocol templates or recommendations.

        When helping users with clinical trial protocols, follow these steps:

        1. Understand the user's specific needs (protocol creation, review, optimization)
        2. Identify the appropriate parameters (study phase, type, condition, intervention, etc.)
        3. Execute the appropriate function with these parameters
        4. Present results in a clear, organized manner
        5. Offer additional recommendations for protocol improvement
        6. Suggest related statistical considerations when relevant

        Always prioritize scientific rigor, regulatory compliance, and patient safety in your recommendations. Be prepared to explain the rationale behind protocol elements and suggest alternatives when appropriate.

        Ensure that all protocol elements adhere to common data model standards to facilitate interoperability and data sharing across clinical research systems.

  AgentAliasResource:
    Type: AWS::Bedrock::AgentAlias
    Condition: CreateAgentAliasCondition
    Properties:
      AgentId: !GetAtt Agent.AgentId
      AgentAliasName: !Ref AgentAliasName

Outputs:
  AgentId:
    Description: Agent ID
    Value: !Ref Agent
  AgentAliasId:
    Description: Agent Alias ID
    Value: !GetAtt AgentAliasResource.AgentAliasId
    Condition: CreateAgentAliasCondition
  AgentAliasArn:
    Description: Agent Alias ARN
    Value: !GetAtt AgentAliasResource.AgentAliasArn
    Condition: CreateAgentAliasCondition
  ClinicalDataModelLambdaArn:
    Description: ARN of the Clinical Data Model Lambda function
    Value: !GetAtt ClinicalDataModelLambda.Arn